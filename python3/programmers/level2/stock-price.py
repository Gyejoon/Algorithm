# 주식 가격

"""
초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요.

제한사항
prices의 각 가격은 1 이상 10,000 이하인 자연수입니다.
prices의 길이는 2 이상 100,000 이하입니다.
입출력 예
prices	return
[1, 2, 3, 2, 3]	[4, 3, 1, 1, 0]
입출력 예 설명
1초 시점의 ₩1은 끝까지 가격이 떨어지지 않았습니다.
2초 시점의 ₩2은 끝까지 가격이 떨어지지 않았습니다.
3초 시점의 ₩3은 1초뒤에 가격이 떨어집니다. 따라서 1초간 가격이 떨어지지 않은 것으로 봅니다.
4초 시점의 ₩2은 1초간 가격이 떨어지지 않았습니다.
5초 시점의 ₩3은 0초간 가격이 떨어지지 않았습니다.
"""


def solution(prices):
    answer = []

    # 비교할 가격의 경우 0번째 부터 시작.
    for i in range(0, len(prices)):
        # 가격이 떨어진 시점을 비교하는 것이므로 중간에 한번이라도 떨어졌는지를 확인 하는 용도의 플래그 값.
        fin = False
        # 현재 비교할 가격 인덱스로 부터 1만큼 뒤에 있는 값부터 배열 끝까지 비교.
        for j in range(i + 1, len(prices)):
            # 현재 값이 뒤에 있는 값보다 작을 경우 (즉, 가격이 떨어졌는가를 확인)
            if prices[i] > prices[j]:
                # 떨어진 가격의 인덱스에서 현재 인덱스를 뺌.
                answer.append(j - i)
                # 떨어졌다에 값을 할당
                fin = True
                break
        # 한번도 떨어지지 않았다면, 전체 가격의 길이에서 현재 인덱스와 1만큼 각각 뺀다.
        # Example) 가격 길이 5, 현재 인덱스, 0, 1 => 4
        if fin == False:
            answer.append(len(prices) - i - 1)

    return answer
